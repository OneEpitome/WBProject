name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build_backend_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./Backend/WBBackend
          push: true
          tags: rkddlfah02/wbbackend:test-amd64
          platforms: linux/amd64

  build_frontend_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./Frontend/wb-project
          push: true
          tags: rkddlfah02/wbfront:test-amd64
          platforms: linux/amd64

  build_frontend_arm64:
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Cleanup Storage
        run: |
          docker system prune -a -f --volumes

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./Frontend/wb-project
          push: true
          tags: rkddlfah02/wbfront:test-arm64
          platforms: linux/arm64

  build_backend_arm64:
    runs-on: [self-hosted, linux, ARM64]
    needs: [build_frontend_arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Cleanup Storage
        run: |
          docker system prune -f -a --volumes

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./Backend/WBBackend
          push: true
          tags: rkddlfah02/wbbackend:test-arm64
          platforms: linux/arm64

  merge_multi_arch_images:
    runs-on: ubuntu-latest
    needs: [build_backend_amd64, build_frontend_amd64, build_backend_arm64]
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Merge images
        run: |
          docker buildx imagetools create -t rkddlfah02/wbbackend:test rkddlfah02/wbbackend:test-arm64 rkddlfah02/wbbackend:test-amd64
          docker buildx imagetools create -t rkddlfah02/wbfront:test rkddlfah02/wbfront:test-arm64 rkddlfah02/wbfront:test-amd64

  deploy:
    runs-on: ubuntu-latest
    needs: [merge_multi_arch_images]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: reflected-flux-383011

      - name: Deploy to GCP VM Instance
        run: |
          gcloud config set project reflected-flux-383011
          gcloud compute ssh ${{ secrets.GCP_VM_USERNAME }}@instance-1 --zone asia-northeast3-a -- "mkdir -p ~/WProject/nginx"
          gcloud compute scp --recurse ./nginx ${{ secrets.GCP_VM_USERNAME }}@instance-1:~/WProject --zone asia-northeast3-a
          gcloud compute scp ./docker-compose.yml ${{ secrets.GCP_VM_USERNAME }}@instance-1:~/WProject/docker-compose.yml --zone asia-northeast3-a
          gcloud compute ssh ${{ secrets.GCP_VM_USERNAME }}@instance-1 --zone asia-northeast3-a -- "sudo docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
          gcloud compute ssh ${{ secrets.GCP_VM_USERNAME }}@instance-1 --zone asia-northeast3-a -- "sudo aa-remove-unknown"
          gcloud compute ssh ${{ secrets.GCP_VM_USERNAME }}@instance-1 --zone asia-northeast3-a -- "sudo docker system prune -f -a --volumes"
          gcloud compute ssh ${{ secrets.GCP_VM_USERNAME }}@instance-1 --zone asia-northeast3-a -- "sudo docker stack deploy -c ~/WProject/docker-compose.yml app"
